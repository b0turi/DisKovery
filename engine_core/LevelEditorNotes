Multiple render targets for default frame buffers when in edit mode
- framebuffers are stored in renderers in diskovery_entity_manager
- in edit_scene, add a new renderer with an additional color attachment in the frame buffers
- add additional out var in frag shader with the color passed into vertex shader as the output for all pixels (layout(location = 1))



Terrain generation:

pull in height map with filename as parameter (load as a pygame surface)
stores a pygame surface to hold the height map (in editor)
  - tools will allow user to draw directly onto terrain (backend drawing to the surface )
pass in value to specify how precise the samples from the height map should be (and also the number of vertices)
blend map in texture shader so multiple textures can be used:
  - use a number to specify how many textures will be blended together (num)
  - the first ceil(num/3) textures will be read as blend maps
  - each successive texture after that will be loaded and blended in accordance with the RGB values of the blend maps
  - (stretch goal) each texture can have a normal map if the name of the next texture is the same with the suffix '_norm'

tiling of each texture

  e.g. num = 5
  blendmap1 (r1, g1, b1)
  blendmap2 (r2, g2, b2)
  tex1 -> r1
  tex2 -> g1
  (stretch goal) tex2_norm (applied to the lighting of tex2 parts)
  tex3 -> b1
  tex4 -> r2
  tex5 -> g2

  (b2 is unused)
